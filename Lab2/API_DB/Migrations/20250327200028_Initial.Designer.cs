// <auto-generated />
using API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_DB.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250327200028_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("API.PokemonRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abilities")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BaseExperience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abilities = "[\"static\",\"lightning-rod\"]",
                            BaseExperience = 112,
                            Height = 4,
                            Name = "pikachu",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Abilities = "[\"blaze\",\"solar-power\"]",
                            BaseExperience = 240,
                            Height = 17,
                            Name = "charmander",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Abilities = "[\"overgrow\",\"chlorophyll\"]",
                            BaseExperience = 64,
                            Height = 7,
                            Name = "bulbasaur",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("API.TypeRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Counters")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Counters = "[\"water\",\"earth\"]",
                            Name = "electricity"
                        },
                        new
                        {
                            Id = 2,
                            Counters = "[\"water\",\"void\"]",
                            Name = "fire"
                        },
                        new
                        {
                            Id = 3,
                            Counters = "[\"fire\",\"earth\"]",
                            Name = "nature"
                        });
                });

            modelBuilder.Entity("API.PokemonRow", b =>
                {
                    b.HasOne("API.TypeRow", "Type")
                        .WithMany("Pokemons")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("API.TypeRow", b =>
                {
                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
